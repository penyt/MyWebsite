<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>企鵝窩</title>
        <link>https://li.penli.quest/</link>
        <description>Recent content on 企鵝窩</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <copyright>Pen</copyright>
        <lastBuildDate>Thu, 16 Jan 2025 14:33:23 +0000</lastBuildDate><atom:link href="https://li.penli.quest/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>小企的大天地</title>
        <link>https://li.penli.quest/p/big-sky-ground/</link>
        <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/big-sky-ground/</guid>
        <description>&lt;img src="https://li.penli.quest/p/big-sky-ground/cover.jpg" alt="Featured image of post 小企的大天地" /&gt;&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;
&lt;p&gt;🐧&lt;br&gt;
企鵝有一對翅膀&lt;br&gt;
企鵝不會飛&lt;br&gt;
企鵝會吃魚&lt;br&gt;
企鵝世界最可愛&lt;/p&gt;
&lt;h2 id=&#34;引用&#34;&gt;引用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;有沒有一種可能，企鵝其實會飛 &amp;mdash;penli&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://li.penli.quest/penguin.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;測試圖片&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在這邊試一些酷功能&lt;/p&gt;








&lt;div id=&#34;password-box&#34; class=&#34;password-box&#34;&gt;
    &lt;input type=&#34;password&#34; id=&#34;password&#34; class=&#34;password-input&#34; placeholder=&#34;小企密碼&#34;&gt;
    &lt;button id=&#34;submit&#34; class=&#34;submit-button&#34;&gt;送出&lt;/button&gt;
&lt;/div&gt;

&lt;div id=&#34;inner-content&#34; style=&#34;display: none;&#34;&gt;
  &lt;blockquote&gt;
&lt;p&gt;小企🐧偷偷隱藏了一隻魚魚🐟，要拿給小狐🦊吃&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/84488c7c8f12a0ff7d07c101e0e4c422&#34; target=&#34;_blank&#34;&gt; fish &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/84488c7c8f12a0ff7d07c101e0e4c422.js&#34;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;

&lt;/div&gt;

&lt;script&gt;
document.getElementById(&#34;submit&#34;).addEventListener(&#34;click&#34;, function() {
    var userInput = document.getElementById(&#34;password&#34;).value;
    if (userInput === &#34;0302&#34;) {
        
        document.getElementById(&#34;password-box&#34;).style.display = &#34;none&#34;;
        document.getElementById(&#34;inner-content&#34;).style.display = &#34;block&#34;;
    } else {
        
        document.getElementById(&#34;password&#34;).value = &#34;&#34;; 
        document.getElementById(&#34;password&#34;).setAttribute(&#34;placeholder&#34;, &#34;error 88&#34;);
    }
});
&lt;/script&gt;

&lt;style&gt;
.password-box {
    width: 300px;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 10px;
}
.password-input {
    width: calc(100% - 100px);
    padding: 8px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    background-color: transparent;
}
.submit-button {
    padding: 8px 15px;
    background-color: #afafaf;
    color: #fff;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
}
.submit-button:hover {
    background-color: #6a6a6a;
}
&lt;/style&gt;

</description>
        </item>
        <item>
        <title>使用 Node.js 製作的樹莓派溫度監控網頁應用</title>
        <link>https://li.penli.quest/p/pi-pen/</link>
        <pubDate>Tue, 14 Jan 2025 16:22:16 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/pi-pen/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;這是我所設計的一個簡易網頁應用，我叫他 pi-pen&lt;/p&gt;
&lt;p&gt;他是使用 node.js 作為後端，利用樹莓派內建的系統溫度文件或系統命令來獲取溫度&lt;/p&gt;
&lt;p&gt;接著透過 javascript 將數據實時每 5 秒更新並顯示在網頁上。&lt;/p&gt;
&lt;h2 id=&#34;使用方式&#34;&gt;使用方式&lt;/h2&gt;
&lt;h3 id=&#34;程式碼結構&#34;&gt;程式碼結構&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;pi-pen&lt;/strong&gt;&lt;br&gt;
├ &lt;a class=&#34;link&#34; href=&#34;https://github.com/penyt/pi-pen/blob/main/server.js&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;server.js
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt; &lt;br&gt;
└ public&lt;br&gt;
  └ &lt;a class=&#34;link&#34; href=&#34;https://github.com/penyt/pi-pen/blob/main/public/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;index.html
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/p&gt;

 
 
 
 &lt;div&gt;
     &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/95a0b903a236dcc9feac0b5c8663395a&#34; target=&#34;_blank&#34;&gt; server.js &lt;/a&gt; &lt;/p&gt;
     &lt;script src=&#34;https://gist.github.com/penyt/95a0b903a236dcc9feac0b5c8663395a.js?file=server.js&#34;&gt;&lt;/script&gt;
 &lt;/div&gt;
 
 &lt;style&gt;
     script {
         margin-top: 0;
     }
 &lt;/style&gt;

 
 
 
 &lt;div&gt;
     &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/95a0b903a236dcc9feac0b5c8663395a&#34; target=&#34;_blank&#34;&gt; /public/index.html &lt;/a&gt; &lt;/p&gt;
     &lt;script src=&#34;https://gist.github.com/penyt/95a0b903a236dcc9feac0b5c8663395a.js?file=index.html&#34;&gt;&lt;/script&gt;
 &lt;/div&gt;
 
 &lt;style&gt;
     script {
         margin-top: 0;
     }
 &lt;/style&gt;
&lt;h3 id=&#34;實際操作&#34;&gt;實際操作&lt;/h3&gt;
&lt;p&gt;到你想要存放程式碼的位置，將我的 repo 複製下來 &lt;code&gt;git clone https://github.com/penyt/pi-pen.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或是複製 &lt;code&gt;server.js&lt;/code&gt; 和 &lt;code&gt;/public/index.html&lt;/code&gt; 這兩個主要檔案也可以。&lt;/p&gt;
&lt;p&gt;接著在 pi-pen 資料夾下，執行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;node server.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若樹莓派沒有 node，先 &lt;a class=&#34;link&#34; href=&#34;https://nodejs.org/zh-tw/download&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;看這個
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt; 安裝&lt;/p&gt;
&lt;p&gt;此時，在瀏覽器打上 &lt;a class=&#34;link&#34; href=&#34;http://localhost:5472&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://localhost:5472
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt; 就可以看到如下的畫面，這就是樹莓派的溫度&lt;/p&gt;
&lt;img width=&#34;1120&#34; alt=&#34;10min-bigscreen&#34; src=&#34;https://github.com/user-attachments/assets/318254b7-477a-40db-9d22-3f013fb6c525&#34; /&gt;
&lt;p&gt;右邊有下拉選單可以視需求調整要觀察的時間&lt;/p&gt;
&lt;h3 id=&#34;關於資料儲存&#34;&gt;關於資料儲存&lt;/h3&gt;
&lt;p&gt;這個程式主要只是在快速有圖形介面觀察溫度，而不需要監測硬體，主要目的在於方便快速&lt;/p&gt;
&lt;p&gt;所以我用來存放資料的 json 檔案（程式執行後會自動生成在 pi-pen 資料夾裡），只會儲存 &lt;strong&gt;24小時&lt;/strong&gt; 的數據！！！&lt;/p&gt;
&lt;p&gt;超過 24 小時的會自動被刪除，不要把它當成永久儲存溫度數據的地方喔&lt;/p&gt;
&lt;h2 id=&#34;如何在背景運行&#34;&gt;如何在背景運行？&lt;/h2&gt;
&lt;p&gt;我這邊使用 &lt;a class=&#34;link&#34; href=&#34;https://pm2.io/docs/runtime/guide/installation/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PM2
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;，來達成背景運作的功效&lt;/p&gt;
&lt;p&gt;若樹莓派上沒有 PM2 那麼就用 npm 來安裝（官方的方式）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install pm2 -g
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接著進入 &lt;code&gt;pi-pen&lt;/code&gt; 資料夾（&lt;code&gt;cd /path/to/pi-pen&lt;/code&gt;），執行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 start server.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果有更改 &lt;code&gt;server.js&lt;/code&gt; 的檔名，這裡要記得改掉&lt;/p&gt;
&lt;p&gt;查看 PM2 狀態：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看日誌：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pm2 logs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這時就算關閉終端，這個網頁應用還是會繼續運行&lt;/p&gt;
&lt;h2 id=&#34;也可使用-vcgencmd-命令來獲取溫度&#34;&gt;也可使用 vcgencmd 命令來獲取溫度&lt;/h2&gt;
&lt;p&gt;只需要將 &lt;code&gt;server.js&lt;/code&gt; 替換成底下這個 &lt;code&gt;server-vcgencmd.js&lt;/code&gt; 就可以了

 
 
 
 &lt;div&gt;
     &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/95a0b903a236dcc9feac0b5c8663395a&#34; target=&#34;_blank&#34;&gt; server-vcgencmd.js &lt;/a&gt; &lt;/p&gt;
     &lt;script src=&#34;https://gist.github.com/penyt/95a0b903a236dcc9feac0b5c8663395a.js?file=server-vcgencmd.js&#34;&gt;&lt;/script&gt;
 &lt;/div&gt;
 
 &lt;style&gt;
     script {
         margin-top: 0;
     }
 &lt;/style&gt;&lt;/p&gt;
&lt;p&gt;by Pen&lt;/p&gt;
</description>
        </item>
        <item>
        <title>113年專利師考試上榜心得</title>
        <link>https://li.penli.quest/p/113%E5%B9%B4%E5%B0%88%E5%88%A9%E5%B8%AB%E8%80%83%E8%A9%A6%E4%B8%8A%E6%A6%9C%E5%BF%83%E5%BE%97/</link>
        <pubDate>Wed, 23 Oct 2024 16:19:48 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/113%E5%B9%B4%E5%B0%88%E5%88%A9%E5%B8%AB%E8%80%83%E8%A9%A6%E4%B8%8A%E6%A6%9C%E5%BF%83%E5%BE%97/</guid>
        <description>&lt;p&gt;🐧 背景：112化工學士&lt;/p&gt;
&lt;h2 id=&#34;-前言&#34;&gt;🐧 前言&lt;/h2&gt;
&lt;p&gt;10/16放榜一周過去，發文回饋社會🦊。第一次考的時候是大四剛畢業112年，從去年六月中準備到考試（約2個月），中途出了車禍，騎機車被無良小黃撞：）&lt;br&gt;
選考物理化學是因為大學科系必修，但是最後個位分數我是沒想到的…… 其他科目分數倒是還算在預料之中。今年第二次考，大約從五月開始準備（約3.5個月），沒有膽子選物理化學了，選了感覺比較能在短時間拉起來的工業設計，如願上榜。&lt;/p&gt;
&lt;h2 id=&#34;-準備心情&#34;&gt;🐧 準備心情&lt;/h2&gt;
&lt;p&gt;第一次像是去期中期末考，中間還去了輕井澤真好玩（被嗆很久），第二次是考學測的認真程度&lt;/p&gt;
&lt;h2 id=&#34;-準備時間&#34;&gt;🐧 準備時間&lt;/h2&gt;
&lt;p&gt;第一次 2 個月，第二次 3.5 個月，兩次考試中間在事務所打雜&lt;/p&gt;
&lt;h2 id=&#34;-成績&#34;&gt;🐧 成績&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;科目&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;112年第一次考試&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;113年第二次考試 (上榜)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;專利法規&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;47(申21/測26)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;71(申37/測34)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;行政救濟&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;55(申29/測26)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;58(申36/測22)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;普物普化&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;78&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;審查基準&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;60(申38/測22)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;65(申35/測30)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;專業英文&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;55(申19/測36)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;61(申13/測48)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;物理化學&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;工業設計&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;61&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;代理實務&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;40&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;65&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;平均&lt;/b&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;49.1428&lt;/b&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;64.7142&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;-準備用書評價&#34;&gt;🐧 準備用書、評價&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;專利法規：法條（專利法、TRIPs、巴黎公約）、學校法律系專利法上課講義、高點智財法爭點解讀（伊律師）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;法條要中英一起&lt;/li&gt;
&lt;li&gt;高點智財法爭點解讀架構清晰、例子充足，推推👍🏻&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;行政救濟：法條（行政程序法、訴願法、行政訴訟法、智慧財產審理法）、高點函授（韓台大）、輔助用書（程樂、行政法十講x2）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;智財審理法：很重要，一定要看&lt;/li&gt;
&lt;li&gt;高點函授：整體觀念架構不錯，推👍🏻&lt;/li&gt;
&lt;li&gt;程樂：挑需要的來填充筆記（視需求）&lt;/li&gt;
&lt;li&gt;十講：也是補充筆記，但我用的不多，函授和十講感覺可以擇一&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;普物普化：大學筆記、Halliday普物、Zumdahl普化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;兩本原文書都很讚（大一讀的）&lt;/li&gt;
&lt;li&gt;Halliday我備考有買中文譯本，專門整理公式用的，推👍🏻&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;審查基準：官方審查基準（葵花寶典，不用別的書）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;專業英文：法條（專利法、TRIPs、巴黎公約）、智財局單字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(1) 物理化學：大學筆記、原文書（我9分）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2) 工業設計：網路上各種資源、工業設計論、設計概論、ptt patentable筆記&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不一定要買書，網路上很多資源&lt;/li&gt;
&lt;li&gt;ptt patentable筆記很不錯，提供準備方向👍🏻&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代理實務：一些打雜時期寫的稿、專利師歷屆試題詳解（郭熙）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;專利師歷屆試題詳解，推推👍🏻&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;-準備方式和考試心得&#34;&gt;🐧 準備方式和考試心得&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;專利法規：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;準備方式：我大四修完學校的專利法，有一定的概念，這個部分應該看函授或看書可以代替（高點函授、伊律師那本），一定要先有整體架構，然後去寫考古題，寫完考古題一定要訂正，還要整理自己的答題模板，模板要滾瓜爛熟！模板很重要，模板只要寫好記熟，塗改少而且寫得快，一個爭點的模板整理幾個小時很正常。有時間可以去看司律智財的擬答。&lt;/li&gt;
&lt;li&gt;心得：選擇題一翻兩瞪眼，專利法、TRIPs、巴黎公約一定要熟，施行細則會考重要的；手寫用三段論法，法條能背就背，條號錦上添花。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;行政救濟：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;準備方式：我沒有修過課，所以是看函授先理解大架構，然後看書和例子去補充筆記，再挑函授重要的部分重看一遍。我覺得是最難的一科，很痛苦（第一次選擇題分數高是因為運氣好，出很多熟的）。一樣需要做模板。&lt;/li&gt;
&lt;li&gt;心得：選擇題法條要熟，觀念要熟；手寫用三段論法，法條能背就背，條號錦上添花。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;普物普化：第一次考的時候，把所有大一的東西都重念了一次，然後才開始刷題，第二次就直接刷題+整理公式。公式要記，選擇題給的時間（一小時）根本沒辦法讓你慢慢推！！我一直都是考試推推派，所以這科我也很痛苦，變背科…，可是想說明明就會寫，不想送他，就盡力硬著頭皮背了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;審查基準：不管手寫選擇，不用多說啃爛審查基準就對了，裡面的案例一定一定要看，手寫很多跟案例一樣的，也需要整理模板（設計也要）。這個手寫的格式好像比較沒有要求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;專業英文：選擇題不難，專利法英文版、TRIPs、巴黎公約要記熟，寫考古題的時候每個選項好好訂正、整理單字；手寫看起來要法學名詞很精確才會高分（我做不到..），第二題通常是翻譯，要盡量多拿一點。這科是我花最少時間的，除了法條對照英文版和訂正考古題之外沒有再花時間。申論第一題我都用白話文寫，採放推策略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(1) 物理化學（抱怨）：想考9分再問我。我的物化上下 A 和 A- 彷彿是假的：) 我以為我畢業證書是雞腿換的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2) 工業設計：多看、多找，看書看影片都可以，設計史的部分要自己整理一下。不要怕背、不要怕瞎掰（？
我113年第二題寫「巴黎奧運的床是紙做的」和一些廢話，結果還拿了10分…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代理實務：多看多寫專利說明書，每個欄位都有機會出，一定要多寫，不要怕重寫！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;-答題時間分配&#34;&gt;🐧 答題時間分配&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;選擇+手寫，選擇題約15-25分鐘就要解決，選擇題寫完進入手寫後就不要回來看（不要改不要改不要改答案）&lt;/li&gt;
&lt;li&gt;普物普化各半小時，不拿手的科目偷另一科的5-10分鐘，但拿手的準確度不能丟&lt;/li&gt;
&lt;li&gt;代理實務三小時，時間要分配好，時間越長越容易失算（要寫說明書欄位的題目手會很痠，要有心理準備）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-結論&#34;&gt;🐧 結論&lt;/h2&gt;
&lt;p&gt;整體來說，每一科的大架構理解完，就可以寫考古題了，寫考古題一定要計時，寫完一定要訂正，申論不要怕重寫，選擇題每個選項都要懂。整理模板很重要，不要懶！普物普化想要寫完不可能不背東西，推推派認命努力背QQ。&lt;/p&gt;
&lt;p&gt;基本上每一科我覺得考古題就夠了，從大概107、108開始往後寫，寫到剩一回留著，再開始從107、108往前寫，考試前三週開始要按照時辰331去計時，習慣考試作息。考前一週把剩的那一回（114要考就是留113的），一樣照著時辰寫完，就可以開開心心去考試了（?&lt;/p&gt;
&lt;p&gt;🐧🦊&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Word 追蹤修訂一次改為實際文字顏色</title>
        <link>https://li.penli.quest/p/word-track-revision/</link>
        <pubDate>Fri, 04 Oct 2024 13:37:54 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/word-track-revision/</guid>
        <description>&lt;p&gt;最近用 word 的追蹤修訂在改文件，但是要給別人的時候，別人卻說不會用追蹤修訂，也不想學&amp;hellip;&lt;/p&gt;
&lt;p&gt;我是不想一個一個標註顏色、底線、刪除線啦 🙃🙃🙃&lt;/p&gt;
&lt;p&gt;所以寫了這個 VBA 一次解決&lt;/p&gt;
&lt;h2 id=&#34;情況&#34;&gt;情況&lt;/h2&gt;
&lt;p&gt;情況分成兩種：&lt;br&gt;
  第一種：只把插入的標註紅色+底線&lt;br&gt;
  第二種：插入的部分變紅色文字+底線，刪除的變成藍色文字+刪除線&lt;/p&gt;
&lt;h2 id=&#34;邏輯&#34;&gt;邏輯&lt;/h2&gt;
&lt;p&gt;邏輯上來說很簡單：&lt;br&gt;
  1.偵測修改的部分&lt;br&gt;
  2.插入的部分直接先加上顏色和底線&lt;br&gt;
  3.接受所有插入部分&lt;br&gt;
  4.刪除的部分複製一份放在原本的詞句後面（因為刪除的實際上來說已經是不存在的了，只是因為追蹤修訂暫時保留）&lt;br&gt;
  5.在複製的那一份加上顏色和刪除線&lt;br&gt;
  &lt;strong&gt;6.接受所有刪除部分&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最後一步稍微思考一下其實就不會弄錯&lt;/p&gt;
&lt;h2 id=&#34;在-word-操作&#34;&gt;在 word 操作&lt;/h2&gt;
&lt;p&gt;  第一步：打開 word，按 &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;F11&lt;/code&gt;&lt;br&gt;
  第二步：工具列 「插入」+「模組」 （insert + module）&lt;br&gt;
  第三步：底下這些程式碼挑適合的貼上&lt;br&gt;
     （如果要儲存，右鍵這個專案，「匯出檔案」）&lt;br&gt;
  第四步：關閉 VBA 視窗&lt;br&gt;
  第五步：在 word，按 &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;F8&lt;/code&gt;&lt;br&gt;
  第六步：選擇 InsertRed 或 InsertRedDeleteBlue 或任何自己取的名字，點「執行」&lt;br&gt;
  第七步：等他（追蹤修訂的數量決定需要的時間），完成&lt;/p&gt;
&lt;p&gt;基本上是不會有錯誤啦，但是也可以人工再檢查一下&lt;/p&gt;
&lt;p&gt;



&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/344101686d5ef5f4b13e62fb073e792d&#34; target=&#34;_blank&#34;&gt; 插入是紅色，刪除是藍色 &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/344101686d5ef5f4b13e62fb073e792d.js?file=redblue.bas&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;




&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/344101686d5ef5f4b13e62fb073e792d&#34; target=&#34;_blank&#34;&gt; 只有插入是紅色 &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/344101686d5ef5f4b13e62fb073e792d.js?file=red.bas&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;&lt;/p&gt;
&lt;p&gt;by Pen&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Pihole 設置 Wildcard Dns</title>
        <link>https://li.penli.quest/p/pi-wildcard-dns/</link>
        <pubDate>Sun, 07 Jul 2024 15:30:40 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/pi-wildcard-dns/</guid>
        <description>&lt;h2 id=&#34;介紹-wildcard-dns&#34;&gt;介紹 Wildcard DNS&lt;/h2&gt;
&lt;p&gt;甚麼是 Wildcard DNS??&lt;/p&gt;
&lt;p&gt;要讓 &lt;code&gt;whatever.hi.my.domain&lt;/code&gt; 、
&lt;code&gt;whenever.hi.my.domain&lt;/code&gt; 、
&lt;code&gt;whoever.hi.my.domain&lt;/code&gt; 全部指向 54.87.87.87 IP 位址&lt;/p&gt;
&lt;p&gt;不用設置三個 DNS 紀錄，設置一個就好了&lt;/p&gt;
&lt;p&gt;讓所有 &lt;code&gt;.hi.my.domain&lt;/code&gt; 的子域名全部指向同一個 54.87.87.87 IP 位址，這就是 Wildcard Dns&lt;/p&gt;
&lt;h2 id=&#34;pihole-ui-設置出現錯誤&#34;&gt;PiHole UI 設置出現錯誤&lt;/h2&gt;
&lt;p&gt;如果像是 bind 之類的 DNS，可能只要直接設置 A 紀錄：&lt;code&gt;*.hi.my.domain&lt;/code&gt; =&amp;gt; 54.87.87.87，就可以了&lt;/p&gt;
&lt;p&gt;但是如果用 pihole 的 local DNS 的話，用 UI 介面是沒有辦法設置的，如果你像底下這樣輸入，就會顯示錯誤訊息&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/pihole-wildcard-dns/pidns.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;錯誤訊息&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;但我們可以去修改 pihole 的配置文件就可以做到了&lt;/p&gt;
&lt;h2 id=&#34;更改-pihole-配置文件&#34;&gt;更改 PiHole 配置文件&lt;/h2&gt;
&lt;p&gt;首先進入 dnsmasq.d 的資料夾，然後新建立一個 XX-wildcard.conf 的檔案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /etc/dnsmasq.d/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo nano 05-wildcard.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在這個檔案輸入：

 
 
 
 &lt;div&gt;
     &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/ed7763430df29eb1475f398c75dd58c5&#34; target=&#34;_blank&#34;&gt; /etc/dnsmasq.d/05-wildcard.conf &lt;/a&gt; &lt;/p&gt;
     &lt;script src=&#34;https://gist.github.com/penyt/ed7763430df29eb1475f398c75dd58c5.js?file=05-wildcard.conf&#34;&gt;&lt;/script&gt;
 &lt;/div&gt;
 
 &lt;style&gt;
     script {
         margin-top: 0;
     }
 &lt;/style&gt;
之後保存退出 (記得把域名和 IP 改成你要的)&lt;/p&gt;
&lt;p&gt;然後讓 pihole 重新抓你的配置檔&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;service pihole-FTL restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這樣其實就完成了，要確認的話用 nslookup，他就會顯示你設定的 IP 了 (當然你 nslookup 的環境要使用 pihole 的 dns，不然怎麼 nslookup 都看不到喔)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nslookup whatever.hi.my.domain
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nslookup whenever.hi.my.domain
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nslookup whoever.hi.my.domain
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;by Pen&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hugo Stack 主題 -- 目錄 toc 設置更改</title>
        <link>https://li.penli.quest/p/stack-toc/</link>
        <pubDate>Sat, 23 Mar 2024 16:15:07 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/stack-toc/</guid>
        <description>&lt;h2 id=&#34;用戶體驗&#34;&gt;用戶體驗&lt;/h2&gt;
&lt;p&gt;stack主題的toc在手機端並不顯示，但我自己覺得目錄蠻重要的&lt;/p&gt;
&lt;p&gt;而且手機寬度縮短，長度就會變長，沒有目錄的話就要一直滑滑滑，體驗並不是很好&lt;/p&gt;
&lt;p&gt;可是電腦版目錄在右側的版面我也很喜歡，所以就打算改成 手機端目錄在文章開頭、電腦端則照舊在右側&lt;/p&gt;
&lt;h2 id=&#34;參考引入-toc-的-html&#34;&gt;參考、引入 toc 的 html&lt;/h2&gt;
&lt;p&gt;之前 &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack/issues/422&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;github issue
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt; 有人做過把目錄放進文章，根據這個改了一下，加上手機端的條件、更改樣式 (程式碼在後面)&lt;/p&gt;
&lt;p&gt;在想要目錄出現的位置引入 toc-inline 就可以了（我放在 content.html 的&lt;code&gt;&amp;lt;section class=&amp;quot;article-content&amp;quot;&amp;gt;&lt;/code&gt;裡面第一行&lt;/p&gt;




&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/ded9d1f55c1f10673a35ea4e00117394&#34; target=&#34;_blank&#34;&gt; /layouts/partials/article/components/content.html &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/ded9d1f55c1f10673a35ea4e00117394.js?file=content.html&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;
&lt;h2 id=&#34;程式碼&#34;&gt;程式碼&lt;/h2&gt;




&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/ded9d1f55c1f10673a35ea4e00117394&#34; target=&#34;_blank&#34;&gt; /layouts/partials/article/components/toc-inline.html &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/ded9d1f55c1f10673a35ea4e00117394.js?file=toc-inline.html&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;




&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/ded9d1f55c1f10673a35ea4e00117394&#34; target=&#34;_blank&#34;&gt; /assets/scss/custom.scss &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/ded9d1f55c1f10673a35ea4e00117394.js?file=toc-custom.scss&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;
&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;
&lt;p&gt;&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;http://ncloud.penli.quest/s/toc-preview/download/preview.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;手機端效果1&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;center&gt;🔼 手機端效果1&lt;/center&gt;  
&lt;hr&gt;
&lt;p&gt;&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;http://ncloud.penli.quest/s/preview2/download/preview2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;手機端效果2&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;center&gt;🔼 手機端效果2&lt;/center&gt;  
&lt;br&gt;
&lt;p&gt;by Pen&lt;/p&gt;
</description>
        </item>
        <item>
        <title>關於用 docker 安裝 hugo 的 baseurl 問題</title>
        <link>https://li.penli.quest/p/hugo-docker-baseurl/</link>
        <pubDate>Mon, 01 Apr 2024 09:53:20 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/hugo-docker-baseurl/</guid>
        <description>&lt;h2 id=&#34;問題&#34;&gt;問題&lt;/h2&gt;
&lt;p&gt;用docker架設hugo網站的人可能不多，不過寫下前陣子遇到的問題&lt;/p&gt;
&lt;p&gt;在config檔案明明設置了baseurl，但是實際的permalink卻一直是https://localhost:1313&lt;/p&gt;
&lt;p&gt;很多需要重新導向的服務都會出問題（前陣子遇到utterance在登入github的時候導不回來&lt;/p&gt;
&lt;p&gt;後來爬了很多文發現是hugo server的問題，可能被其他預設的配置蓋掉了config的設定&lt;/p&gt;
&lt;h2 id=&#34;解決&#34;&gt;解決&lt;/h2&gt;
&lt;p&gt;當在容器裡進行hugo server或hugo的時候，直接指定&lt;code&gt;--baseurl&lt;/code&gt;&lt;/p&gt;




&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/9917d11779859124057ff586134852ae&#34; target=&#34;_blank&#34;&gt; docker-compose.yaml &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/9917d11779859124057ff586134852ae.js&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;
&lt;p&gt;我是用docker compose安裝hugo，所以直接加在command的地方，然後不要port&lt;/p&gt;
&lt;p&gt;設置好新的yaml後，再到yaml的資料夾裡面&lt;code&gt;docker compose up -d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;permalink就變成https://my.domain.com了&lt;/p&gt;
&lt;p&gt;可以去網頁直接F12確認&lt;/p&gt;
&lt;p&gt;這時候utterance或其他重新導向的服務就可以正常使用不會導去localhost了&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/JamesTurland/JimsGarage&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/JamesTurland/JimsGarage
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.sujaypillai.dev/2020/08/2020-08-17-setting-up-blog-on-aws-using-traefik-docker/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.sujaypillai.dev/2020/08/2020-08-17-setting-up-blog-on-aws-using-traefik-docker/
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;by Pen&lt;/p&gt;
</description>
        </item>
        <item>
        <title>建置虛擬主機</title>
        <link>https://li.penli.quest/p/%E5%BB%BA%E7%BD%AE%E8%99%9B%E6%93%AC%E4%B8%BB%E6%A9%9F/</link>
        <pubDate>Fri, 22 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/%E5%BB%BA%E7%BD%AE%E8%99%9B%E6%93%AC%E4%B8%BB%E6%A9%9F/</guid>
        <description>&lt;p&gt;用GCP建立一個自己的虛擬主機一點都不難&lt;/p&gt;
&lt;p&gt;接下來會介紹如何獲取第一次使用GCP的免費額度，並實際建立一個新的虛擬主機🎈&lt;/p&gt;
&lt;h2 id=&#34;建立虛擬主機&#34;&gt;建立虛擬主機&lt;/h2&gt;
&lt;h3 id=&#34;建立帳號&#34;&gt;建立帳號&lt;/h3&gt;
&lt;p&gt;首先當然要有一個google帳號，然後用他登入 &lt;a class=&#34;link&#34; href=&#34;https://console.cloud.google.com/?hl=zh-tw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GCP
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然後免費試用給他按下去就對了&lt;/p&gt;
&lt;p&gt;全部同意，繼續
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F1.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;步驟1/2，就跟平常辦一些帳號一樣，選一選然後繼續
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F2.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;步驟2/2，就如實填，然後要填一張信用卡當作付款方式(簽帳金融卡應該也可以)，他會試刷一美金&lt;/p&gt;
&lt;p&gt;但之後有300美金所以基本上還不會扣到款，等90天結束需要付款的時候google會再問你
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F3.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F4.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h3 id=&#34;建立專案&#34;&gt;建立專案&lt;/h3&gt;
&lt;p&gt;建立專案名稱，他有一些符號或大小寫有規定，就照著他的規定去設定&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F5.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;設定好讓他跑一下，建立完成會出現這個畫面，會顯示專案的資訊&lt;/p&gt;
&lt;p&gt;然後按左上角的三條橫線叫出選單&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F6.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;選擇compute engine -&amp;gt; VM執行個體&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F7.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;會需要啟用comput engine API，點選啟用，這裡需要等一下子&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F8.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;進到這個畫面前置作業就都完成了，可以開始新建自己的虛擬主機了&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F9.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h3 id=&#34;建立主機&#34;&gt;建立主機&lt;/h3&gt;
&lt;p&gt;設定名稱(一樣會有一些符號的小限制)，區域選 奧勒岡州、愛荷華州、南卡羅來納州，然後機器類型選e2-micro&lt;/p&gt;
&lt;p&gt;為甚麼要選這些呢?因為這是GCP的免費限制!!可以參考&lt;a class=&#34;link&#34; href=&#34;https://cloud.google.com/free/docs/free-cloud-features?hl=zh-tw#free-tier-usage-limits&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方的文件
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;當然，要選在亞洲也沒有不行，而且90天內我們有300美元(約台幣9,000元)，可以之後搬到新的主機就好&lt;/p&gt;
&lt;p&gt;不過不是特別大的流量的話，我是覺得地區選在美國速度也沒有很慢，這邊就自己選擇&lt;/p&gt;
&lt;p&gt;右邊橘色框框會根據你所選的虛擬主機配置實時更新，可以用那個大略估計你的預算，當然那只是預估而已!  gcp計費是用多少付多少的機制&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F10.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;然後往下，這邊會發現有自訂的選項，CPU和記憶體都可以根據自己的需要去設定，這邊我們直接使用配置好的e2-micro&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F11.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;繼續往下，我們會看到開機磁碟的選項，就和一般電腦一樣你會需要一個磁碟&lt;/p&gt;
&lt;p&gt;這邊點選 變更，然後我選ubuntu和標準永久磁碟，這邊也是根據自己的需求調整(google很好心的還有附上磁碟類型的比較)，想要直接選SSD或極端也可以&lt;/p&gt;
&lt;p&gt;大小先選10GB，一樣是根據需求調整，如果要用來架設雲端的話，可以把空間設大一點&lt;/p&gt;
&lt;p&gt;不過隨著這些改變的當然就是價錢啦!就根據需要自行評估了💸&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F12.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;選好開機磁碟後，右邊的價錢預估也會跟著變動&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F13.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;再來往下到防火牆的部分，如果你是想要架設網站，要讓其他人訪問你的網站，要把http和https打勾，這樣gcp會在你確定建立VM的時候，一併幫你把端口(port)80和443打開&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F14.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;br&gt;
確定之後按下建立&lt;/p&gt;
&lt;p&gt;等他跑一下，這邊建議他在跑的時候不要動視窗，不管是甚麼設置都一樣，耐心等一下比較不會出現未知的錯誤，也不會很久&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F15.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;接著看到主機名稱的左邊出現綠色勾勾✅就是成功建立了&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F16.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;這時候你自己的虛擬主機就建立好了!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;保留靜態外部ip&#34;&gt;保留靜態外部IP&lt;/h2&gt;
&lt;p&gt;後面接著講一些小設定，主機設立好了還有一個很重要的東西是我們的IP位址&lt;/p&gt;
&lt;p&gt;目前設定下來我們的外部IP位址其實是動態的，意思就是在每次主機關機重啟的過程IP位址是會變動的&lt;/p&gt;
&lt;p&gt;那這個對於一些不論是增加安全性的IP白名單(VPN)或是其他網域的設定會比較麻煩&lt;/p&gt;
&lt;p&gt;這邊就示範一下如何保留靜態IP位址(當然如果喜歡動態的IP也可以維持不變，動態IP也有它的好處 eg.隱私性、費用問題等等&amp;hellip;)&lt;/p&gt;
&lt;p&gt;首先我們先點進來我們的VM，然後點選上方的「編輯」&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F17.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;滑到下方會有一個「網路介面」把它點開&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F18.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;可以看到 外部IPv4 的地方是「臨時」&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F19.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;br&gt;
我們點選他&lt;/p&gt;
&lt;p&gt;然後選擇「保留靜態外部IP位址」&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F20.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;輸入名稱，然後按 保留&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F21.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F22.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;儲存對主機的變更，之後跳出來，看到的外部IP就已經是靜態的IP了，重新開機也不會變動&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F23.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;如果不放心可以再點進去主機查看&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F24.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;變更歷史&#34;&gt;變更歷史&lt;/h2&gt;
&lt;p&gt;右上角的小鈴鐺可以看到你做的每一個變更動作&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F25.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ssh-連線&#34;&gt;SSH 連線&lt;/h2&gt;
&lt;p&gt;再來是用SSH連線進入虛擬主機&lt;/p&gt;
&lt;p&gt;這邊用最直接的方式，透過gcp的SSH按鈕進入，點 在瀏覽器視窗中開啟&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F26.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;接著他會彈出一個視窗(如果瀏覽器有封鎖彈出式視窗要記得解除)，告訴你他正在連線&lt;/p&gt;
&lt;p&gt;如果有再彈出要允許他連線的話直接按 授權/同意/允許 就可以了(肯定是要授權才能使用他這個SSH連線方式&amp;hellip;)&lt;/p&gt;
&lt;p&gt;這個SSH按鈕他會生成一對金鑰掛到你的虛擬主機，整個過程會慢一點，後面會再介紹別的方式連線主機&lt;/p&gt;
&lt;p&gt;最後&amp;hellip;&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/vm1-create-img%2F27.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;br&gt;
出現這個視窗就是成功用SSH連線了!!&lt;/p&gt;
&lt;p&gt;底下綠色的會是user@vm-name&lt;/p&gt;
&lt;p&gt;@前面被我馬賽克的是你的使用者名稱(通常會是這個google帳號)，@後面就是你的虛擬主機名稱&lt;/p&gt;
&lt;p&gt;eg. gmail是iampenguin@gmail.com，用戶名會是iampenguin&lt;/p&gt;
&lt;p&gt;而虛擬主機是my-first-vm的話，就會顯示 &lt;font color=#00FF00&gt;iampenguin@my-first-vm&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;今天的介紹就到這裡ㄌ&lt;/p&gt;
&lt;p&gt;by Pen&lt;/p&gt;
</description>
        </item>
        <item>
        <title>docker ps 格式</title>
        <link>https://li.penli.quest/p/docker-ps/</link>
        <pubDate>Tue, 19 Mar 2024 08:52:50 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/docker-ps/</guid>
        <description>&lt;h2 id=&#34;問題&#34;&gt;問題&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;docker ps&lt;/code&gt; 指令的輸出格式會很容易超出螢幕，不好閱讀 (這大家應該都知道不需要展示圖片了吧ㄎ)&lt;/p&gt;
&lt;h2 id=&#34;官方文件&#34;&gt;官方文件&lt;/h2&gt;
&lt;p&gt;docker有給出 &lt;code&gt;--format&lt;/code&gt; 的 &lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/config/formatting/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文件
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;自訂命令&#34;&gt;自訂命令&lt;/h2&gt;
&lt;p&gt;這是我自己使用的調整格式後的docker ps命令&lt;br&gt;




&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/7f5365b3be2baf76835bf6831d116b9c&#34; target=&#34;_blank&#34;&gt; command &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/7f5365b3be2baf76835bf6831d116b9c.js?file=dockerps.sh&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;&lt;/p&gt;
&lt;h2 id=&#34;輸出結果&#34;&gt;輸出結果&lt;/h2&gt;
&lt;p&gt;輸出結果是這樣的：&lt;br&gt;
&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://myrr.penli.quest/docker-ps-img%2Fdockerps.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;輸出結果&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;br&gt;
明顯好閱讀很多很多很多&lt;/p&gt;
&lt;h2 id=&#34;windterm快捷我個人沒有再使用了&#34;&gt;Windterm快捷（我個人沒有再使用了）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我個人從去年後半開始便沒有再使用 windterm 了，原因不外乎 windterm 一直以來未完全開源的問題，我現在就是完全使用 vscode 和終端機了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這邊我使用windterm快捷命令可以直接這樣輸入到快捷命令的Text:框框，也供大家參考：




&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/7f5365b3be2baf76835bf6831d116b9c&#34; target=&#34;_blank&#34;&gt; windterm shortcut &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/7f5365b3be2baf76835bf6831d116b9c.js?file=dockerpswt.sh&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
如果空格在命令中無法使用，可以改成  \t  用跳脫字元，但我用GCP網頁的SSH叫都沒問題空格應該是可以使用的  
&lt;p&gt;大概就這樣&lt;/p&gt;
&lt;p&gt;by Pen&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hugo Stack 主題 -- 我的 Shortcode</title>
        <link>https://li.penli.quest/p/my-shortcode/</link>
        <pubDate>Tue, 02 Apr 2024 09:25:58 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/my-shortcode/</guid>
        <description>&lt;h2 id=&#34;-文字對齊&#34;&gt;📏 文字對齊&lt;/h2&gt;
&lt;center&gt; &amp;lt;center&amp;gt; 置中了吧 &amp;lt;/center&amp;gt; &lt;/center&gt;
&lt;center&gt; 置中了吧 &lt;/center&gt;
&lt;p align=&#34;left&#34;&gt; &amp;lt;p align=&#34;left&#34;&amp;gt; 靠左了吧 &amp;lt;/p&amp;gt; &lt;br&gt; 靠左了吧 &lt;/p&gt;
&lt;p align=&#34;right&#34;&gt; &amp;lt;p align=&#34;right&#34;&amp;gt; 靠右了吧 &amp;lt;/p&amp;gt; &lt;br&gt; 靠右了吧 &lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-文字顏色&#34;&gt;🎨 文字顏色&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;font color=#FF0000&amp;gt; 紅色的文字 &amp;lt;/font&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;font color=#FF0000&gt; 紅色的文字 &lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-html-跳脫字元&#34;&gt;🌀 html 跳脫字元&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字元&lt;/th&gt;
&lt;th&gt;編碼&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;#123;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;}&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;#125;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大空格&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;emsp;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小空格&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.freeformatter.com/html-entities.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;html 字元
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-書籤連結&#34;&gt;🔖 書籤連結&lt;/h2&gt;
&lt;p&gt;手機端會太擁擠，所以我讓圖片在手機端隱藏，img的地方加上&lt;code&gt;class=&amp;quot;hide-on-mobile&amp;quot;&lt;/code&gt;，&lt;code&gt;class=&amp;quot;hide-on-mobile&amp;quot;&lt;/code&gt; 寫在 style 裡面&lt;/p&gt;
&lt;blockquote&gt;
&lt;div style=&#34;text-align:center&#34;&gt;md 引入格式：&amp;ensp; &amp;#123;&amp;#123;&amp;lt;link-card name=&#34;&#34; desc=&#34;&#34; link=&#34;&#34; img=&#34;&#34;&amp;gt;&amp;#125;&amp;#125;&lt;/div&gt;  
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;shortcode html 程式碼：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-link-card-html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-link-card-html
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;樣式 scss 程式碼：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-link-card-var-scss&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-link-card-var-scss
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;效果-書籤連結&#34;&gt;效果 (書籤連結)&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;shortcode html&amp;rdquo; 連結做成書籤：&lt;/p&gt;







&lt;style&gt;
    .card-container {
        background-color: var(--card-background);
        border: 1px solid var(--table-border-color);
        border-radius: 8px;
        padding: 10px;
        box-shadow: 0 0 5px var(--card-text-color-tertiary);
        transition: background-color 0.3s ease;
        text-decoration: none;
        color: inherit;
        display: flex; 
        overflow: hidden; 
        height: var(--lc-height); 
    }
    .card-container:hover {
        background-color: var(--card-background-selected);
    }
    .card-content {
        display: flex; 
        flex-direction: column;
        flex: 1;  
        padding-left: 20px;
        padding-right: 10px;
        padding-bottom: 10px;
    }
    .card-content img {
        height: calc(var(--lc-height) * 0.85);
        width: auto; 
        border-radius: 4px;
        margin-left: auto;  
        margin-right: 10px;  
    }

    .card-content n {
        font-size: var(--lc-name-size);
        margin: 0;
        color: var(--lc-name-color);
        font-weight: bold;
    }
    .card-content p {
        margin: 0;
        text-indent: var(--lc-desc-tab);
        color: var(--lc-desc-color);
    }
    .card-content u {
        font-size: var(--lc-url-size);
        margin: 0;
        color: var(--lc-url-color);
    }
    @media (max-width: 768px) {
      .hide-on-mobile {
          display: none;
      }
    }
&lt;/style&gt;

&lt;a href=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-link-card-html&#34; class=&#34;card-container&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;card-content&#34;&gt;
        &lt;n&gt;link-card.html&lt;/n&gt;
        &lt;p&gt;⋙ shortcode html&lt;/p&gt;
        &lt;u&gt;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-link-card-html&lt;/u&gt;
    &lt;/div&gt;
    
        &lt;img src=&#34;http://ncloud.penli.quest/s/img/download/img.png&#34; alt=&#34;link-card.html&#34; class=&#34;hide-on-mobile&#34;&gt;
    
&lt;/a&gt;

&lt;p&gt;&amp;ldquo;樣式 scss&amp;rdquo; 連結做成書籤：&lt;/p&gt;







&lt;style&gt;
    .card-container {
        background-color: var(--card-background);
        border: 1px solid var(--table-border-color);
        border-radius: 8px;
        padding: 10px;
        box-shadow: 0 0 5px var(--card-text-color-tertiary);
        transition: background-color 0.3s ease;
        text-decoration: none;
        color: inherit;
        display: flex; 
        overflow: hidden; 
        height: var(--lc-height); 
    }
    .card-container:hover {
        background-color: var(--card-background-selected);
    }
    .card-content {
        display: flex; 
        flex-direction: column;
        flex: 1;  
        padding-left: 20px;
        padding-right: 10px;
        padding-bottom: 10px;
    }
    .card-content img {
        height: calc(var(--lc-height) * 0.85);
        width: auto; 
        border-radius: 4px;
        margin-left: auto;  
        margin-right: 10px;  
    }

    .card-content n {
        font-size: var(--lc-name-size);
        margin: 0;
        color: var(--lc-name-color);
        font-weight: bold;
    }
    .card-content p {
        margin: 0;
        text-indent: var(--lc-desc-tab);
        color: var(--lc-desc-color);
    }
    .card-content u {
        font-size: var(--lc-url-size);
        margin: 0;
        color: var(--lc-url-color);
    }
    @media (max-width: 768px) {
      .hide-on-mobile {
          display: none;
      }
    }
&lt;/style&gt;

&lt;a href=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-link-card-var-scss&#34; class=&#34;card-container&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;card-content&#34;&gt;
        &lt;n&gt;link-card-var.scss&lt;/n&gt;
        &lt;p&gt;⋙ 樣式 scss&lt;/p&gt;
        &lt;u&gt;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-link-card-var-scss&lt;/u&gt;
    &lt;/div&gt;
    
        &lt;img src=&#34;http://ncloud.penli.quest/s/img/download/img.png&#34; alt=&#34;link-card-var.scss&#34; class=&#34;hide-on-mobile&#34;&gt;
    
&lt;/a&gt;

&lt;hr&gt;
&lt;h2 id=&#34;-gist-嵌入加上標題&#34;&gt;👩🏻‍💻 gist 嵌入加上標題&lt;/h2&gt;
&lt;p&gt;原始的 gist 嵌入的樣式不喜歡，還有最底下那條 &amp;ldquo;hosted with ❤️ by GitHub&amp;rdquo;，我是選擇用自己的樣式保留著，畢竟是 github 的服務，直接刪掉總感覺不太恰當&lt;/p&gt;
&lt;p&gt;再用一個方框加上標題，可以自訂和gist檔案名稱不同的標題，標題也可以連結到gist的頁面&lt;/p&gt;
&lt;p&gt;penyt 是我的 github 帳號，你要換成自己的&lt;/p&gt;
&lt;blockquote&gt;
&lt;div style=&#34;text-align:center&#34;&gt;md 引入格式：&amp;ensp; &amp;#123;&amp;#123;&amp;lt;gist-title &#34;title&#34; penyt ID (檔名)&amp;gt;&amp;#125;&amp;#125;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;shortcode html 程式碼：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-gist-title-html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-gist-title-html
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;樣式 scss 程式碼：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-gist-scss&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa#file-gist-scss
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;效果-gist-標題&#34;&gt;效果 (gist 標題)&lt;/h3&gt;
&lt;p&gt;



&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa&#34; target=&#34;_blank&#34;&gt; gist-title.html &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa.js?file=gist-title.html&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;




&lt;div&gt;
    &lt;p class=&#34;gist-title&#34;&gt; &lt;a href=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa&#34; target=&#34;_blank&#34;&gt; gist.scss &lt;/a&gt; &lt;/p&gt;
    &lt;script src=&#34;https://gist.github.com/penyt/6e19f98476ffa5d737d8f8b268dcd0fa.js?file=gist.scss&#34;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;style&gt;
    script {
        margin-top: 0;
    }
&lt;/style&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;文章加密&#34;&gt;🔐文章加密&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;shortcode html：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;樣式 scss：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;效果-文章加密&#34;&gt;效果 (文章加密)&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>在 Docker Swarm 部署 traefik 以實現跨主機代理</title>
        <link>https://li.penli.quest/p/docker-swarm-traefik/</link>
        <pubDate>Thu, 16 Jan 2025 14:33:23 +0000</pubDate>
        
        <guid>https://li.penli.quest/p/docker-swarm-traefik/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;如果你有多台主機，並且架設了 docker 服務，其實可以不用再每一台主機上都部署 traefik 來處理每個容器的反向代理和 TLS 證書&lt;/p&gt;
&lt;p&gt;當然，如果在同一個區域網路下，可以簡單地使用 traefik 的動態配置文件做到&lt;/p&gt;
&lt;p&gt;可是如果今天不在同一區域網路下呢？常見的情況就是在不同區域網路下的多台 VPS&lt;/p&gt;
&lt;p&gt;又或者，就是想要使用 docker 的 traefik label 來設定中間件（middleware）呢？&lt;/p&gt;
&lt;p&gt;畢竟如果想要添加 authentik、authelia 這類的授權頁面，或者使用 crowdsec，利用 traefik 的中間件其實非常方便設置&lt;/p&gt;
&lt;p&gt;其實還有一個方法，那就是在 docker swarm 下部署容器，並利用 overlay network 來做到跨越多台 docker 主機的作用，也就是這篇文章的內容&lt;/p&gt;
&lt;h2 id=&#34;-docker-swarm-的好處&#34;&gt;🐧 docker swarm 的好處&lt;/h2&gt;
&lt;h3 id=&#34;i-需求少&#34;&gt;I. 需求少&lt;/h3&gt;
&lt;p&gt;如果你的機器沒有公共 IP（public IP），像是宿舍或公寓裡自架的伺服器，你未必會有最上游 NAT 的權限來設置端口轉發（port fowarding），那麼在這台主機上所設置的服務，便會無法暴露到外網&lt;/p&gt;
&lt;p&gt;而若使用 docker swarm，便只需要在一台機器上部署 traefik 進行反向代理，就可以把你家裡伺服器上的服務或網站暴露到外網&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;center&gt;好處就是：只需要有一個公共 IP、只需要部署一個 traefik&lt;/center&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;且 docker swarm 是 docker 內建的功能，在完整安裝 docker engine 的時候就存在了，也不會佔用很多資源&lt;/p&gt;
&lt;h3 id=&#34;ii-容易設置&#34;&gt;II. 容易設置&lt;/h3&gt;
&lt;p&gt;使用 docker swarm 只需要簡單修改一下 docker 的 &amp;ldquo;labels&amp;rdquo; 區塊，和部署應用程式時的 docker 命令，就可以完成了&lt;/p&gt;
&lt;h2 id=&#34;-操作方法&#34;&gt;🐧 操作方法&lt;/h2&gt;
&lt;p&gt;&lt;font color=#FF0000&gt; host1 &lt;/font&gt; :  擁有公共ＩＰ，並且 traefik 將部署在這裡&lt;br&gt;
&lt;font color=#3FB6F5&gt; host2 &lt;/font&gt; :  「沒有」公共ＩＰ，其他的 app 會部署在這裡&lt;/p&gt;
&lt;h3 id=&#34;第一步初始化-docker-swarm&#34;&gt;第一步，初始化 docker swarm&lt;/h3&gt;
&lt;p&gt;在 &lt;font color=#FF0000&gt; host1 &lt;/font&gt; 執行:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker swarm init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;他會輸出像這樣的內容，但這是設置 worker 用的token：&lt;br&gt;
&lt;code&gt;docker swarm join --token THISIS-7-89456123789aworker456987token....... IP_ADDR:2377&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;另外還會有一行，這行才是我們需要使用的：&lt;br&gt;
&lt;code&gt;To add a manager to this swarm, run &#39;docker swarm join-token manager&#39; and follow the instructions.&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;所以接著，繼續在 &lt;font color=#FF0000&gt; host1 &lt;/font&gt; 執行:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker swarm join-token manager
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;他會輸出像這樣的內容，這是設置 &lt;strong&gt;manager&lt;/strong&gt; 用的token：&lt;br&gt;
&lt;code&gt;docker swarm join --token MAGENA-7-89456123789r456987token....... IP_ADDR:2377&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;第二步將-host2-設置成-manager-非-worker因為-worker-無法自行部署-app-&#34;&gt;第二步，將 host2 設置成 manager （非 worker，因為 worker 無法自行部署 app ）&lt;/h3&gt;
&lt;p&gt;切換到 &lt;font color=#3FB6F5&gt; host2 &lt;/font&gt; 後，執行 &lt;strong&gt;MANAGER&lt;/strong&gt; 的設置命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;（記得複製你自己的）docker swarm join --token MAGENA-7-8943789r487token....... IP_ADDR:2377
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接著，執行這個命令來檢查節點的狀態&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker node ls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;應該會輸出像這樣的內容:&lt;/p&gt;
&lt;blockquote&gt;
ID                            &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;
HOSTNAME                      &amp;emsp;&amp;emsp;
STATUS    &amp;emsp;&amp;emsp;
AVAILABILITY   &amp;emsp;&amp;emsp;&amp;emsp;
MANAGER STATUS   &amp;emsp;&amp;emsp;&amp;emsp;
ENGINE VERSION    
&lt;p&gt;idofhostt2       
host2         
Ready        
Active               
Reachable               
27.3.1&lt;/p&gt;
&lt;p&gt;idofhostt1 *    
host1       
Ready        
Active               
Leader                  
27.3.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;現在，我們就成功透過 docker swarm 來連接兩台跨網路的裝置了！&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;第三步新增-traefik-的-docker-composeyml-和其他配置文件-1&#34;&gt;第三步，新增 traefik 的 docker-compose.yml 和其他配置文件 &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h3&gt;
&lt;p&gt;在 &lt;font color=#FF0000&gt; host1 &lt;/font&gt; 新增如下方的資料夾和檔案&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增資料夾 : &lt;code&gt;mkdir traefik&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;進入資料夾 : &lt;code&gt;cd traefik&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新增檔案 : &lt;code&gt;touch traefik.yml config.yml acme.json docker-compose.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;設置 acme 的權限 : &lt;code&gt;chmod 600 acme.json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;traefik&lt;/strong&gt;&lt;br&gt;
├ docker-compose.yml&lt;br&gt;
├ traefik.yml&lt;br&gt;
├ config.yml&lt;br&gt;
└ acme.json&lt;/p&gt;
&lt;p&gt;編輯 &lt;a class=&#34;link&#34; href=&#34;https://github.com/penyt/traefik-docker-swarm/blob/main/traefik/docker-compose.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;docker-compose.yml
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt; &lt;code&gt;nano docker-compose.yml&lt;/code&gt;，把連結裡的內容貼上;&lt;/p&gt;
&lt;p&gt;編輯 &lt;a class=&#34;link&#34; href=&#34;https://github.com/penyt/traefik-docker-swarm/blob/main/traefik/traefik.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;traefik.yml
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt; &lt;code&gt;nano traefik.yml&lt;/code&gt;，把連結裡的內容貼上&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;(此步驟非必要，但強烈建議) 加上哈希密碼&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install apache2-utils
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;將「username」和「yourpassword」設置成你自己的用戶名和密碼&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;htpasswd -nb username yourpassword
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;命令執行後，會出現像這樣的一串：&lt;code&gt;username:$apr1$8VzK7EwL$4Z9T.HqxGkJpAqVnqp4Ol1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;把所有的 &lt;code&gt;$&lt;/code&gt; 改成 &lt;code&gt;$$&lt;/code&gt; (以避免 docker compose 會把單個&lt;code&gt;$&lt;/code&gt;譯為環境變數)&lt;/p&gt;
&lt;p&gt;接著，把 docker-compose.yml 裡面的 &lt;code&gt;user:hashed_password&lt;/code&gt; 改成剛剛出現的那一串&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;第四步部署-traefik&#34;&gt;第四步，部署 traefik&lt;/h3&gt;
&lt;p&gt;在 &lt;font color=#FF0000&gt; host1 &lt;/font&gt; 執行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker stack deploy -c docker-compose.yml traefik
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或使用任何你喜歡的名稱 &lt;code&gt;docker stack deploy -c docker-compose.yml traefik_stack_name&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;在 &lt;font color=#FF0000&gt; host1 &lt;/font&gt; 和 &lt;font color=#3FB6F5&gt; host2 &lt;/font&gt; 檢查&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker service ls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;輸出如下 :&lt;/p&gt;
&lt;blockquote&gt;
ID             &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;
NAME              &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;
MODE         &amp;emsp;&amp;emsp;
REPLICAS   &amp;emsp;&amp;emsp;
IMAGE                  &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;
PORTS  
&lt;p&gt;rtafeiksid       
traefik_traefik     
replicated    
1/1            
traefik:latest&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;第五步新增-whoami-的-docker-composeyml&#34;&gt;第五步，新增 whoami 的 docker-compose.yml&lt;/h3&gt;
&lt;p&gt;切換到 &lt;font color=#3FB6F5&gt; host2 &lt;/font&gt; 新增如下方的資料夾和檔案&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增資料夾 : &lt;code&gt;mkdir whoami&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;進入資料夾 : &lt;code&gt;cd whoami&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新增檔案 : &lt;code&gt;touch docker-compose.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;whoami&lt;/strong&gt;&lt;br&gt;
└ docker-compose.yml&lt;/p&gt;
&lt;p&gt;編輯 &lt;a class=&#34;link&#34; href=&#34;https://github.com/penyt/traefik-docker-swarm/blob/main/whoami/docker-compose.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;docker-compose.yml
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt; &lt;code&gt;nano docker-compose.yml&lt;/code&gt;，把連結裡的內容貼上&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;第六步部署-apps-whoami&#34;&gt;第六步，部署 apps (whoami)&lt;/h3&gt;
&lt;p&gt;在 &lt;font color=#3FB6F5&gt; host2 &lt;/font&gt; 執行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker stack deploy -c docker-compose.yml whoami
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或使用任何你喜歡的名稱 &lt;code&gt;docker stack deploy -c docker-compose.yml whoami_stack_name&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;在 &lt;font color=#FF0000&gt; host1 &lt;/font&gt; 和 &lt;font color=#3FB6F5&gt; host2 &lt;/font&gt; 檢查&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker service ls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;輸出如下 :&lt;/p&gt;
&lt;blockquote&gt;
ID             &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;
NAME              &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;
MODE         &amp;emsp;&amp;emsp;
REPLICAS   &amp;emsp;&amp;emsp;
IMAGE                  &amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;
PORTS  
&lt;p&gt;rtafeiksid       
traefik_traefik       
replicated    
1/1            
traefik:latest&lt;/p&gt;
&lt;p&gt;whoidami     
whoami2_whoami2     
replicated    
1/1            
traefik/whoami:v1.10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;第七步完成&#34;&gt;第七步，完成&lt;/h3&gt;
&lt;p&gt;現在，應該可以透過你在 traefik 標籤裡設置的域名來訪問 traefik 的 dashboard 或是 whoami 的頁面了&lt;/p&gt;
&lt;p&gt;若有出現任何錯誤，記得:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;確認你的 DNS 紀錄有將域名指向 &lt;font color=#FF0000&gt; host1 &lt;/font&gt;&lt;/li&gt;
&lt;li&gt;檢查 traefik 的日誌 &lt;code&gt;docker service logs traefik_traefik&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;檢查 docker swarm 的 overlay network &lt;code&gt;docker network inspect proxy&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
by Pen
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;traefik deployment reference: &lt;a class=&#34;link&#34; href=&#34;https://github.com/JamesTurland/JimsGarage/blob/main/Traefik/docker-compose.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JimsGarage
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>贊助給動力</title>
        <link>https://li.penli.quest/%E8%B4%8A%E5%8A%A9%E7%B5%A6%E5%8B%95%E5%8A%9B/</link>
        <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://li.penli.quest/%E8%B4%8A%E5%8A%A9%E7%B5%A6%E5%8B%95%E5%8A%9B/</guid>
        <description>&lt;p&gt;menu:
main:
weight: 999999
params:
icon: tag&lt;/p&gt;
&lt;h2 id=&#34;連結&#34;&gt;連結&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://p.ecpay.com.tw/65BE5F5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://p.ecpay.com.tw/65BE5F5
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;qr&#34;&gt;QR&lt;/h2&gt;
&lt;p&gt;&lt;div style=&#34;display: flex; justify-content: center;&#34;&gt;
&lt;img src=&#34;https://li.penli.quest/donateQRCode.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;QRCode&#34;
	
	
	style=&#34;max-height: 700px;&#34;
&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>所有文章</title>
        <link>https://li.penli.quest/archives/</link>
        <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://li.penli.quest/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>關於我</title>
        <link>https://li.penli.quest/about/</link>
        <pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>https://li.penli.quest/about/</guid>
        <description>&lt;p&gt;我是企鵝，綽號小企&lt;br&gt;
Pen 就是 PenLi 就是 penli&lt;/p&gt;
&lt;p&gt;我的生命中有一隻很重要的小狐，謝謝她永遠支持我的一切，小企會一直愛小狐&lt;/p&gt;
&lt;h1 id=&#34;網站介紹&#34;&gt;網站介紹&lt;/h1&gt;
&lt;p&gt;這個網站是用 &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo-theme-stack
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt; 建置的，hugo很讚，再次附上網址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/CaiJimmy/hugo-theme-stack
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo的GitHub
    
    
    
    &lt;span style=&#34;white-space: nowrap;&#34;&gt;&lt;svg width=&#34;.7em&#34;
        height=&#34;.7em&#34; viewBox=&#34;0 0 21 21&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
        &lt;path d=&#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z&#34; fill=&#34;currentColor&#34; /&gt;
        &lt;path d=&#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z&#34;
            fill=&#34;currentColor&#34;&gt;
    &lt;/svg&gt;&lt;/span&gt;
    &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;架網站不說很簡單，但確實不難&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;github&#34;&gt;GitHub&lt;/h1&gt;
&lt;p&gt;附上我的GitHub，我會把一些網站上有或沒有的code或其他東西放上去&lt;/p&gt;







&lt;style&gt;
    .card-container {
        background-color: var(--card-background);
        border: 1px solid var(--table-border-color);
        border-radius: 8px;
        padding: 10px;
        box-shadow: 0 0 5px var(--card-text-color-tertiary);
        transition: background-color 0.3s ease;
        text-decoration: none;
        color: inherit;
        display: flex; 
        overflow: hidden; 
        height: var(--lc-height); 
    }
    .card-container:hover {
        background-color: var(--card-background-selected);
    }
    .card-content {
        display: flex; 
        flex-direction: column;
        flex: 1;  
        padding-left: 20px;
        padding-right: 10px;
        padding-bottom: 10px;
    }
    .card-content img {
        height: calc(var(--lc-height) * 0.85);
        width: auto; 
        border-radius: 4px;
        margin-left: auto;  
        margin-right: 10px;  
    }

    .card-content n {
        font-size: var(--lc-name-size);
        margin: 0;
        color: var(--lc-name-color);
        font-weight: bold;
    }
    .card-content p {
        margin: 0;
        text-indent: var(--lc-desc-tab);
        color: var(--lc-desc-color);
    }
    .card-content u {
        font-size: var(--lc-url-size);
        margin: 0;
        color: var(--lc-url-color);
    }
    @media (max-width: 768px) {
      .hide-on-mobile {
          display: none;
      }
    }
&lt;/style&gt;

&lt;a href=&#34;https://github.com/penyt&#34; class=&#34;card-container&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;card-content&#34;&gt;
        &lt;n&gt;ytpen penyt GitHub&lt;/n&gt;
        &lt;p&gt;⋙ my github with some east east&lt;/p&gt;
        &lt;u&gt;https://github.com/penyt&lt;/u&gt;
    &lt;/div&gt;
    
        &lt;img src=&#34;https://raw.githubusercontent.com/penyt/public-web/main/img/pengit.png&#34; alt=&#34;ytpen penyt GitHub&#34; class=&#34;hide-on-mobile&#34;&gt;
    
&lt;/a&gt;

&lt;h1 id=&#34;gist-theme&#34;&gt;Gist Theme&lt;/h1&gt;







&lt;style&gt;
    .card-container {
        background-color: var(--card-background);
        border: 1px solid var(--table-border-color);
        border-radius: 8px;
        padding: 10px;
        box-shadow: 0 0 5px var(--card-text-color-tertiary);
        transition: background-color 0.3s ease;
        text-decoration: none;
        color: inherit;
        display: flex; 
        overflow: hidden; 
        height: var(--lc-height); 
    }
    .card-container:hover {
        background-color: var(--card-background-selected);
    }
    .card-content {
        display: flex; 
        flex-direction: column;
        flex: 1;  
        padding-left: 20px;
        padding-right: 10px;
        padding-bottom: 10px;
    }
    .card-content img {
        height: calc(var(--lc-height) * 0.85);
        width: auto; 
        border-radius: 4px;
        margin-left: auto;  
        margin-right: 10px;  
    }

    .card-content n {
        font-size: var(--lc-name-size);
        margin: 0;
        color: var(--lc-name-color);
        font-weight: bold;
    }
    .card-content p {
        margin: 0;
        text-indent: var(--lc-desc-tab);
        color: var(--lc-desc-color);
    }
    .card-content u {
        font-size: var(--lc-url-size);
        margin: 0;
        color: var(--lc-url-color);
    }
    @media (max-width: 768px) {
      .hide-on-mobile {
          display: none;
      }
    }
&lt;/style&gt;

&lt;a href=&#34;https://github.com/lonekorean/gist-syntax-themes/blob/master/README.md&#34; class=&#34;card-container&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;card-content&#34;&gt;
        &lt;n&gt;GitHub Gist&lt;/n&gt;
        &lt;p&gt;⋙ gist theme&lt;/p&gt;
        &lt;u&gt;https://github.com/lonekorean/gist-syntax-themes/blob/master/README.md&lt;/u&gt;
    &lt;/div&gt;
    
&lt;/a&gt;

&lt;br&gt;
&lt;br&gt;</description>
        </item>
        <item>
        <title>連結</title>
        <link>https://li.penli.quest/donate-and-links/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://li.penli.quest/donate-and-links/</guid>
        <description></description>
        </item>
        <item>
        <title>搜尋</title>
        <link>https://li.penli.quest/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://li.penli.quest/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
